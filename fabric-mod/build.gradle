import org.apache.tools.ant.filters.ReplaceTokens

plugins {
	id "java"
	id "fabric-loom" version "1.0-SNAPSHOT"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = archives_base_name
version = mod_version
group = maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	// YamlConfiguration
	maven {
		url "https://oss.sonatype.org/content/repositories/releases/"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:$minecraft_version"
	mappings "net.fabricmc:yarn:$yarn_mappings:v2"
	modImplementation "net.fabricmc:fabric-loader:$loader_version"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
	
	// Jedis
	implementation include("redis.clients:jedis:$jedis_version")

	// YamlConfiguration
	implementation include("org.bspfsystems:yamlconfiguration:$yamlconfig_version")
}

processResources {
	inputs.property "version", project.version
	filter(ReplaceTokens, beginToken: "\${", endToken: "}", tokens: [
			version: project.version
	])
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}